#!/usr/bin/env bds
#vim: syntax=java

include "species.bds"
include "report.bds"


help == callpeak gem settings (requirements: -chrsz -seq)

nth_gem		:= 2 		help # threads for gem (default: 2)
wt_gem		:= "20h"	help Walltime for gem (default: 20h, 20:00:00).
mem_gem		:= "16G" 	help Max. memory for gem (default: 16G).


init_callpeak_gem()


void init_callpeak_gem() {

	nth_gem 	= get_conf_val_int( nth_gem,		["nth_gem"] )
	wt_gem 		= get_conf_val( wt_gem, 		["wt_gem"] )
	mem_gem 	= get_conf_val( mem_gem, 		["mem_gem"] )

	print("\n\n== callpeak gem settings\n")
	print( "# threads (gem)\t\t: $nth_gem\n")
	print( "Walltime (gem)\t\t: $wt_gem\n")
	print( "Max. memory (gem)\t: $mem_gem\n")	
}

void chk_callpeak_gem() {

	if ( !path_exists( chrsz ) ) error("Chromosome size file (-chrsz) is missing or doesn't exists! (file: $chrsz)")
	if ( !path_exists("$seq/chr1.fa") ) error("\nReference genome sequence directory doesn't exists! (file: $seq/chr1.fa)\n")
}

string[] _gem( string tag, string ctl_tag, string o_dir, string info ) {

	prefix 		:= "$o_dir/" + make_vs_basename_wo_gz( tag, ctl_tag, "" )
	prefix_basename := get_basename( prefix )

	peak 	:= "$prefix.narrowPeak.gz"
	ksm	:= "$prefix.KSM.txt"
	pfm	:= "$prefix.PFM.txt"
	html	:= "$prefix.result.html"

	Xmx 	:= "-Xmx" + mem_gem

	in 	:= [ tag, ctl_tag ]
	out 	:= [peak, ksm, pfm, html ]

	taskName:= "gem " + info
	cpus 	:= nth_gem;	mem := get_res_mem(mem_gem);	timeout := get_res_wt(wt_gem)

	wait_par( cpus )

	tid := task( out<-in ) {

		sys $shcmd_init

		sys export _JAVA_OPTIONS="-Xms256M $Xmx"; export MAX_JAVA_MEM=$mem_gem;
		
		sys gzip -d -c $tag > $prefix.tagAlign
		sys gzip -d -c $ctl_tag > $prefix.ctl.tagAlign

		sys java $Xmx -jar ${GEMROOT}/gem.jar --g $chrsz --d ${GEMROOT}/Read_Distribution_default.txt --s 2400000000 \
			--expt $prefix.tagAlign  --ctrl $prefix.ctl.tagAlign --f BED \
			--out  $prefix --genome $seq --k_min 6 --k_max 13 --outNP --q 0 --t $nth_gem

		sys rm -f $prefix.tagAlign
		sys rm -f $prefix.ctl.tagAlign

		//# =============================
		//# Sort peaks by signal value and truncate peaks to top 300K
		//# =============================
		sys sort -k7nr,7nr "$prefix/$prefix_basename"_GEM_events.narrowPeak | head -n 300000 | gzip -c > $peak

		sys mv "$prefix/$prefix_basename"_KSM.txt $ksm
		sys mv "$prefix/$prefix_basename"_PFM.txt $pfm
		sys mv "$prefix/$prefix_basename"_result.htm $html

		sys $shcmd_finalize
	}
	
	register_par( tid, cpus )

	return out
}
